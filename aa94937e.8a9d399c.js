(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{129:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return d}));var a=t(4),r=t(9),i=(t(0),t(156)),s={id:"managing_services",title:"Managing Services",sidebar_label:"Managing Services"},o={unversionedId:"administering/managing_services",id:"administering/managing_services",isDocsHomePage:!1,title:"Managing Services",description:"Service Overview",source:"@site/docs/administering/managing_services.md",slug:"/administering/managing_services",permalink:"/manifold-docusaurus/docs/administering/managing_services",editUrl:"https://github.com/ManifoldScholar/manifold-docusaurus/edit/master/docs/administering/managing_services.md",version:"current",sidebar_label:"Managing Services",sidebar:"docs",previous:{title:"Installation",permalink:"/manifold-docusaurus/docs/administering/installation"},next:{title:"Storage",permalink:"/manifold-docusaurus/docs/administering/storage"}},l=[{value:"Service Overview",id:"service-overview",children:[]},{value:"For Package Installs",id:"for-package-installs",children:[{value:"Restarting Services",id:"restarting-services",children:[]},{value:"Troubleshooting Services",id:"troubleshooting-services",children:[]},{value:"Commands",id:"commands",children:[]}]},{value:"For Docker Installs",id:"for-docker-installs",children:[]},{value:"For Source Installs",id:"for-source-installs",children:[]}],c={toc:l};function d(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"service-overview"},"Service Overview"),Object(i.b)("p",null,"Manifold is composed of a handful of services, with two services, the client and the API, doing most of the work. The client application is a Javascript application that is delivered to the user\u2019s browser, and that also runs on the server as a Node application. All data in Manifold is delivered to the client through Manifold\u2019s API service. The API service is a Ruby on Rails application that runs on the server. API request paths typically begin with /api/v1. Just about all other requests are handled by the client application."),Object(i.b)("p",null,'The API relies on number of services. It stores data in a PostgreSQL database. It uses Redis for queuing and caching. Content stored in Manifold is added to an ElasticSearch index for full-text search. There are four services running as part of the API. The first is the API itself, which runs on Puma, a HTTP server for Ruby/Rack applications. The main API application service is referred to inconsistently in the package install as "api" or"puma". The second is called "cable," and it listens to the client application for websocket connections, which are mainly used during ingestion. The third API service is Sidekiq, which is the background job processor. The fourth API service is called "clockwork" and it provides cron-like scheduled task functionality for Manifold.'),Object(i.b)("p",null,"Services are managed differently depending on how Manifold was installed. Be sure to consult the appropriate section for your installation."),Object(i.b)("h2",{id:"for-package-installs"},"For Package Installs"),Object(i.b)("p",null,"In the context of a ",Object(i.b)("a",{parentName:"p",href:"./installation#package-install"},"package install"),", services are managed using the ",Object(i.b)("inlineCode",{parentName:"p"},"manifold-ctl")," command line tool. This tool must be executed as root or usng ",Object(i.b)("inlineCode",{parentName:"p"},"sudo"),"."),Object(i.b)("p",null,"Use the ",Object(i.b)("inlineCode",{parentName:"p"},"manifold-ctl status")," command to see the state of each service:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-shell"},"user@host:~$ sudo manifold-ctl status\nrun: cable: (pid 917) 415s; run: log: (pid 871) 415s\nrun: client: (pid 915) 415s; run: log: (pid 866) 415s\nrun: clockwork: (pid 919) 415s; run: log: (pid 867) 415s\nrun: elasticsearch: (pid 991) 415s; run: log: (pid 869) 415s\nrun: logrotate: (pid 916) 415s; run: log: (pid 865) 415s\nrun: nginx: (pid 914) 415s; run: log: (pid 864) 415s\nrun: postgresql: (pid 918) 415s; run: log: (pid 868) 415s\nrun: puma: (pid 992) 415s; run: log: (pid 870) 415s\nrun: redis: (pid 990) 415s; run: log: (pid 872) 415s\nrun: sidekiq: (pid 1083) 415s; run: log: (pid 873) 415s\n")),Object(i.b)("h3",{id:"restarting-services"},"Restarting Services"),Object(i.b)("p",null,"To restart a service, enter a command in the format of ",Object(i.b)("inlineCode",{parentName:"p"},"manifold-ctl restart service_name"),"."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-shell"},"user@host:~$ sudo manifold-ctl restart nginx\nok: run: nginx: (pid 2008) 0s\n")),Object(i.b)("p",null,"To stop a service, enter a command in the format of ",Object(i.b)("inlineCode",{parentName:"p"},"manifold-ctl stop service_name"),"."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-shell"},"user@host:~$ sudo manifold-ctl stop nginx\nok: down: nginx: 1s, normally up\n")),Object(i.b)("p",null,"To start a service, enter a command in the format of ",Object(i.b)("inlineCode",{parentName:"p"},"manifold-ctl start service_name"),"."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-shell"},"user@host:~$ sudo manifold-ctl start nginx\nok: run: nginx: (pid 2025) 0s\n")),Object(i.b)("h3",{id:"troubleshooting-services"},"Troubleshooting Services"),Object(i.b)("p",null,"If a service fails to start successfully, troubleshoot by consulting the service logs. The logs for each service are located in ",Object(i.b)("inlineCode",{parentName:"p"},"/var/log/manifold"),". There are variations around how each service logs. For example, the API log will be at ",Object(i.b)("inlineCode",{parentName:"p"},"/var/log/manifold/production.log"),", while the client application log will be at ",Object(i.b)("inlineCode",{parentName:"p"},"/var/log/manifold/client/current"),"."),Object(i.b)("p",null,"We also provide the ability to tail service logs using the ",Object(i.b)("inlineCode",{parentName:"p"},"manifold-ctl tail")," command."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-shell"},"user@host:/# sudo manifold-ctl tail client\n==> /var/log/manifold/client/state <==\n\n==> /var/log/manifold/client/current <==\n2021-03-01_13:56:51.71858 \u270a  SSR server is listening on a socket at /var/opt/manifold/client/sockets/client.sock.\n")),Object(i.b)("h3",{id:"commands"},"Commands"),Object(i.b)("p",null,"Running ",Object(i.b)("inlineCode",{parentName:"p"},"manifold-ctl help")," will return the full list of available server management commands:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"Service Management Commands:\n  graceful-kill\n    Attempt a graceful stop, then SIGKILL the entire process group.\n  hup\n    Send the services a HUP.\n  int\n    Send the services an INT.\n  kill\n    Send the services a KILL.\n  once\n    Start the services if they are down. Do not restart them if they stop.\n  restart\n    Stop the services if they are running, then start them again.\n  service-list\n    List all the services (enabled services appear with a *.)\n  start\n    Start services if they are down, and restart them if they stop.\n  status\n    Show the status of all the services.\n  stop\n    Stop the services, and do not restart them.\n  tail\n    Watch the service logs of all enabled services.\n  term\n    Send the services a TERM.\n  usr1\n    Send the services a USR1.\n  usr2\n    Send the services a USR2.\n")),Object(i.b)("h2",{id:"for-docker-installs"},"For Docker Installs"),Object(i.b)("p",null,"When Manifold is run as Docker containers, each container represents a single service. Our docker-compose file includes the following containers:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"postgres"),Object(i.b)("li",{parentName:"ul"},"elasticsearch"),Object(i.b)("li",{parentName:"ul"},"redis"),Object(i.b)("li",{parentName:"ul"},"api_cable"),Object(i.b)("li",{parentName:"ul"},"api_clockwork"),Object(i.b)("li",{parentName:"ul"},"api_rails"),Object(i.b)("li",{parentName:"ul"},"api_sidekiq"),Object(i.b)("li",{parentName:"ul"},"client"),Object(i.b)("li",{parentName:"ul"},"proxy")),Object(i.b)("p",null,"We used environment variables to tell each service how to locate other services on the network. These variables are described in more detail on the ",Object(i.b)("a",{parentName:"p",href:"./reference/environment_variables"},"Environmenet Variables")," page in our documentation. Instructions on managing Docker containers is outside of our documentation's scope."),Object(i.b)("p",null,"To troubleshoot services, start by monitoring the services's output using docker-compose's ",Object(i.b)("inlineCode",{parentName:"p"},"log")," command:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-shell"},"docker-compose logs -f\n")),Object(i.b)("h2",{id:"for-source-installs"},"For Source Installs"),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"This section is still a work in progress. Check back soon for instructions on configuring Manifold services with installation from source."))))}d.isMDXComponent=!0},156:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var a=t(0),r=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=r.a.createContext({}),d=function(e){var n=r.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=d(e.components);return r.a.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},b=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(t),b=a,m=p["".concat(s,".").concat(b)]||p[b]||u[b]||i;return t?r.a.createElement(m,o(o({ref:n},c),{},{components:t})):r.a.createElement(m,o({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=b;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=t[c];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);